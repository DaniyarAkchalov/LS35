{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniyar\\\\Desktop\\\\Tel-Ran\\\\FrontEnd\\\\Lesson Nelli\\\\Lesson35\\\\LS35\\\\ls35_fetch\\\\src\\\\components\\\\ToDos\\\\index.jsx\";\nimport React from 'react';\nimport s from './index.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDos(_ref) {\n  let {\n    todo,\n    complited\n  } = _ref;\n  const todo_status = complited ? 'task done' : 'task not done';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.todo_card,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Todo: \", todo, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Status \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = ToDos;\nvar _c;\n$RefreshReg$(_c, \"ToDos\");","map":{"version":3,"names":["React","s","ToDos","todo","complited","todo_status","todo_card"],"sources":["C:/Users/Daniyar/Desktop/Tel-Ran/FrontEnd/Lesson Nelli/Lesson35/LS35/ls35_fetch/src/components/ToDos/index.jsx"],"sourcesContent":["import React from 'react'\r\nimport s from './index.module.css'\r\n\r\nexport default function ToDos( {todo, complited}) {\r\n\r\n\r\n    const todo_status = complited ? 'task done' : 'task not done'\r\n  return (\r\n    <div className={s.todo_card}>\r\n        <p>Todo: { todo } </p>\r\n        <p>Status </p>\r\n        \r\n\r\n    </div>\r\n  )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,oBAAoB;AAAA;AAElC,eAAe,SAASC,KAAK,OAAqB;EAAA,IAAnB;IAACC,IAAI;IAAEC;EAAS,CAAC;EAG5C,MAAMC,WAAW,GAAGD,SAAS,GAAG,WAAW,GAAG,eAAe;EAC/D,oBACE;IAAK,SAAS,EAAEH,CAAC,CAACK,SAAU;IAAA,wBACxB;MAAA,qBAAWH,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eACtB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc;EAAA;IAAA;IAAA;IAAA;EAAA,QAGZ;AAEV;AAAC,KAZuBD,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}